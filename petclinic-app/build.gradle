plugins {
    id 'com.palantir.docker' version '0.26.0'
    id 'org.springframework.boot'
    id 'application'
}

description = 'petclinic-app'

dependencies {
    implementation project(':petclinic-api')
    implementation "org.javaloong.kongmink:pf4j-spring-boot-starter:$pf4jSpringBootVersion"
    
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    
    implementation 'javax.cache:cache-api'
    implementation 'org.ehcache:ehcache'
    implementation 'org.flywaydb:flyway-core'
    
    implementation 'org.webjars:webjars-locator-core'
    implementation "org.webjars:jquery:$webjarsJqueryVersion"
    implementation "org.webjars:jquery-ui:$webjarsJqueryUiVersion"
    implementation "org.webjars:bootstrap:$webjarsBootstrapVersion"

    runtimeOnly 'org.hsqldb:hsqldb'
    runtimeOnly 'mysql:mysql-connector-java'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

//*************************************************************************
// App Properties
//*************************************************************************

mainClassName = 'org.javaloong.kongmink.petclinic.app.Application'

manifest {
    attributes 'Main-Class': 'org.javaloong.kongmink.petclinic.app.Application'
}

task dockerPlugins(type: Copy) {
    into("$buildDir/libs")
    
    rootProject.subprojects.each { subproject ->
        if (isPluginProject(subproject)) {
            into('plugins') {
                from(subproject.libsDir)
            }
        }
    }
}

docker {
    dependsOn build
    name "javaloong/kongmink/${project.name}"
    tags 'latest'
    copySpec.from(dockerPlugins).into("build/libs")
}
